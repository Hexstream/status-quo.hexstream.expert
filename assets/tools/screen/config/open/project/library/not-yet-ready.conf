# I use this to quickly set up new windows for any of my not-yet-ready libraries.

# C-a o p l f c (open first-class-lambda-lists)
bind -c hexstream-open-library_f c eval 'screen -t "first-class-lambda-lists"' 'stuff "cd lisp/not-yet-ready/first-class-lambda-lists/^M^L"'

# C-a o p l e b (open explicit-bind)
bind -c hexstream-open-library_e b eval 'screen -t "explicit-bind"' 'stuff "cd lisp/not-yet-ready/explicit-bind/^M^L"'

# C-a o p l l f (open lispy-format)
bind -c hexstream-open-library_l f eval 'screen -t "lispy-format"' 'stuff "cd lisp/not-yet-ready/lispy-format/^M^L"'

# C-a o p l x l (open xcall)
bind -c hexstream-open-library_x l eval 'screen -t "xcall"' 'stuff "cd lisp/not-yet-ready/xcall/^M^L"'

# C-a o p l c S (open complex-slots) (c C-s, not c s)
bind -c hexstream-open-library_c ^s eval 'screen -t "complex-slots"' 'stuff "cd lisp/not-yet-ready/complex-slots/^M^L"'

# C-a o p l e M (open ensure-method-combination) (e C-m, not e m)
bind -c hexstream-open-library_e ^m eval 'screen -t "ensure-method-combination"' 'stuff "cd lisp/not-yet-ready/ensure-method-combination/^M^L"'

# C-a o p l e F (open evaluated-flet) (e C-f, not e f)
bind -c hexstream-open-library_e ^f eval 'screen -t "evaluated-flet"' 'stuff "cd lisp/not-yet-ready/evaluated-flet/^M^L"'

# C-a o p l h h (open hexstream-html-doc-mode)
bind -c hexstream-open-library_h h eval 'screen -t "hexstream-html-doc-mode"' 'stuff "cd lisp/not-yet-ready/hexstream-html-doc-mode/^M^L"'

# C-a o p l b e (open bigname)
bind -c hexstream-open-library_b e eval 'screen -t "bigname"' 'stuff "cd lisp/not-yet-ready/bigname/^M^L"'
